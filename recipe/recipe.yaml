context:
  version: 1.3.1
  build_num: 2

recipe:
  name: zlib-split
  version: ${{ version }}

source:
  url:
    - http://zlib.net/zlib-${{ version }}.tar.gz
    - https://gnupg.org/ftp/gcrypt/zlib/zlib-${{ version }}.tar.gz
  sha256: 9a93b2b7dfdac77ceba5a558a580e74667dd6fede4585b91eefb60f03b72df23

build:
  number: ${{ build_num }}

cache:
  requirements:
    build:
      - cmake
      - ninja
      - ${{ compiler('c') }}
      - ${{ stdlib('c') }}
  build:
    script:
      # rattler-build figures out the {.sh,.bat} extensions
      - build_global

outputs:
  - package:
      name: libzlib
    build:
      files:
        - if: linux
          then: lib/libz.so.*
        - if: osx
          then: lib/libz.*.dylib
        - if: win
          then:
            - Library/bin/zlib.dll
            - zlib.dll
    requirements:
      build:
        - ${{ compiler('c') }}
        - ${{ stdlib('c') }}
      host:
      run:
      run_exports:
        - ${{ pin_subpackage('libzlib', upper_bound='x') }}
      run_constraints:
        - zlib ${{ version }} *_${{ build_num }}
    tests:
      - script:
          - if: unix
            then:
              # libzlib on unix should only contain _versioned_ SOs
              - test ! -f ${PREFIX}/lib/libz.a
              - test ! -f ${PREFIX}/lib/libz${SHLIB_EXT}
              - test ! -f ${PREFIX}/include/zlib.h
            else:
              - if not exist %LIBRARY_BIN%\zlib.dll exit 1
              - if not exist %PREFIX%\zlib.dll exit 1

  - package:
      name: zlib
    build:
      files:
        - if: linux
          then: lib/libz.so
        - if: osx
          then: lib/libz.dylib
        - if: unix
          then:
            - include/
            - lib/pkgconfig/
            - lib/libz.a
          else:
            - Library/include/
            - Library/share/
            - Library/lib/zlib.lib
            - Library/lib/zdll.lib
            - Library/lib/z.lib
            - Library/lib/zlibstatic.lib
            - Library/lib/pkgconfig/
    requirements:
      build:
        - ${{ compiler('c') }}
        - ${{ stdlib('c') }}
      host:
        - ${{ pin_subpackage('libzlib', exact=True) }}
      run:
        - ${{ pin_subpackage('libzlib', exact=True) }}
      run_exports:
        - ${{ pin_subpackage('libzlib', upper_bound='x') }}
    tests:
      - package_contents:
          include:
            - zlib.h
          lib:
            # naming pattern doesn't match `lib<foo>.so` (unix) & `foo.dll` (win)
            - if: unix
              then:
                - z
              else:
                - zlib
          files:
            # static libraries & pkgconfig not covered by `lib:` tests
            - if: unix
              then:
                - lib/libz.a
                - lib/pkgconfig/zlib.pc
              else:
                - Library\lib\zlibstatic.lib
                - Library\lib\pkgconfig\zlib.pc
      - requirements:
          run:
            - ${{ compiler('c') }}
        files:
          recipe:
            - test_compile_flags.bat
            - test_compile_flags.c
        script:
          - if: win
            then:
              # can't do exclusion tests using package_contents yet, see
              # https://github.com/prefix-dev/rattler-build/issues/915
              - if exist %LIBRARY_LIB%\zlibwapi.lib exit 1
              - call test_compile_flags.bat

  - package:
      name: libzlib-wapi
    build:
      skip:
        - not win
      files:
        - Library/bin/zlibwapi.dll
    requirements:
      build:
        - ${{ compiler('c') }}
        - ${{ stdlib('c') }}
      host:
      run:
      run_exports:
        - ${{ pin_subpackage('libzlib-wapi', upper_bound='x') }}
      run_constraints:
        - zlib ${{ version }} *_${{ build_num }}
        - zlib-wapi ${{ version }} *_${{ build_num }}
    tests:
      - package_contents:
          files:
            - Library\bin\zlibwapi.dll

  - package:
      name: zlib-wapi
    build:
      skip:
        - not win
      files:
        - Library/lib/zlibwapi.lib
        - Library/include/zlib.h
    requirements:
      build:
        - ${{ compiler('c') }}
        - ${{ stdlib('c') }}
      host:
        - ${{ pin_subpackage('libzlib-wapi', exact=True) }}
        - ${{ pin_subpackage('zlib', exact=True) }}
      run:
        - ${{ pin_subpackage('libzlib-wapi', exact=True) }}
        - ${{ pin_subpackage('zlib', exact=True) }}
      run_exports:
        - ${{ pin_subpackage('libzlib-wapi', upper_bound='x') }}
    tests:
      - package_contents:
          files:
            - include\zlib.h
            - Library\lib\zlibwapi.lib
      - requirements:
          run:
            - ${{ compiler('c') }}
        files:
          recipe:
            - test_compile_flags.bat
            - test_compile_flags.c
        script:
          - call test_compile_flags.bat "wapi"

about:
  license: Zlib
  summary: Massively spiffy yet delicately unobtrusive compression library
  license_file: LICENSE
  description: |
    zlib is designed to be a free, general-purpose, lossless data-compression
    library for use on virtually any computer hardware and operating system.
  homepage: http://zlib.net/
  repository: https://github.com/madler/zlib
  documentation: http://zlib.net/manual.html

extra:
  recipe-maintainers:
    - groutr
    - msarahan
    - ocefpaf
    - isuruf
  feedstock-name: zlib
